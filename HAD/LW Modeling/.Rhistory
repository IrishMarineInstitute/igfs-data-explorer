start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = sim.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
start.par <- c(c(log(30), log(25)), rep(log(0.3), 1), rep(log(1), 2), rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = sim.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
had.data=LengthWeightAge[,c(6,2,3)]
names(had.data)=c("age", "length", "obs.sex")
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
had.dat=LengthWeightAge[,c(6,2,3)]
names(had.dat)=c("age", "length", "obs.sex")
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
head(sim.dat)
vb_growth_mix
had.dat$obs.sex
revalue(had.dat$obs.sex, c("F"="female", "M"="male", "U"="unclassified"))
library(plyr)
revalue(had.dat$obs.sex, c("F"="female", "M"="male", "U"="unclassified"))
had.dat$obs.sex=revalue(had.dat$obs.sex, c("F"="female", "M"="male", "U"="unclassified"))
head(had.dat)
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
ollike <- rep(NA, maxiter.em)
maxiter.em = 1000
reltol = 1e-08
optim.method = "BFGS"
estimate.mixprop = TRUE
ollike <- rep(NA, maxiter.em)
if (plot.fit) {
blue2red <- colorRampPalette(c("blue", "red"))
col.vec <- blue2red(100)
breaks <- seq(-0.1, 1.1, length = 100)
data$jitter.age <- jitter(data$age)
}
plot.fit = TRUE
if (plot.fit) {
blue2red <- colorRampPalette(c("blue", "red"))
col.vec <- blue2red(100)
breaks <- seq(-0.1, 1.1, length = 100)
data$jitter.age <- jitter(data$age)
}
data=had.dat
if (plot.fit) {
blue2red <- colorRampPalette(c("blue", "red"))
col.vec <- blue2red(100)
breaks <- seq(-0.1, 1.1, length = 100)
data$jitter.age <- jitter(data$age)
}
classified.data <- data[data$obs.sex %in% c("female", "male"),
]
unclassified.data <- data[data$obs.sex == "unclassified",
]
female_growth_fit <- function(x) {
linfF * (1 - exp(-kF * (x - t0F)))
}
male_growth_fit <- function(x) {
linfM * (1 - exp(-kM * (x - t0M)))
}
if (i == 1) {
par <- start.list[["par"]]
}
growth.par <- par[["growth.par"]]
par <- start.list[["par"]]
growth.par <- par[["growth.par"]]
linfF <- exp(growth.par[binding["lnlinf", "female"]])
linfM <- exp(growth.par[binding["lnlinf", "male"]])
kF <- exp(growth.par[binding["lnk", "female"]])
kM <- exp(growth.par[binding["lnk", "male"]])
t0F <- -exp(growth.par[binding["lnnt0", "female"]])
t0M <- -exp(growth.par[binding["lnnt0", "male"]])
linfF
linfM
kF
kM
t0F
t0M
sigmaF <- exp(growth.par[binding["lnsigma", "female"]])
sigmaM <- exp(growth.par[binding["lnsigma", "male"]])
sigmaF
mixprop <- par[["mixprop"]]
muF.unclass <- female_growth_fit(unclassified.data$age)
muM.unclass <- male_growth_fit(unclassified.data$age)
muF.unclass
muF.class <- female_growth_fit(classified.data$age)
muM.class <- male_growth_fit(classified.data$age)
muF.class
classified.data$tau <- ifelse(classified.data$obs.sex ==
"female", 1, ifelse(classified.data$obs.sex == "male",
0, NA))
classified.data$tau
unclassified.data$tau <- get_growth_post_prob(mixprop = mixprop,
muF = muF.unclass, muM = muM.unclass, sigmaF = sigmaF,
sigmaM = sigmaM, data = unclassified.data, distribution = distribution)
distribution="lognormal"
unclassified.data$tau <- get_growth_post_prob(mixprop = mixprop,
muF = muF.unclass, muM = muM.unclass, sigmaF = sigmaF,
sigmaM = sigmaM, data = unclassified.data, distribution = distribution)
complete.data <- rbind(classified.data, unclassified.data)
head(complete.data)
ll.F.class <- sum(classified.data$obs.sex == "female") *
log(mixprop) + sum(dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"])
ll.M.class <- sum(classified.data$obs.sex == "male") *
log(1 - mixprop) + sum(dlnorm(classified.data$length,
meanlog = log(muM.class) - sigmaM^2/2, sdlog = sigmaM,
log = TRUE)[classified.data$obs.sex == "male"])
ll.M.class
ll.F.class
ll.F.class <- sum(classified.data$obs.sex == "female") *
log(mixprop) + sum(dnorm(classified.data$length,
mean = muF.class, sd = sigmaF, log = TRUE)[classified.data$obs.sex ==
"female"])
ll.F.class
ll.F.class <- sum(classified.data$obs.sex == "female") *
log(mixprop) + sum(dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"])
ll.M.class <- sum(classified.data$obs.sex == "male") *
log(1 - mixprop) + sum(dlnorm(classified.data$length,
meanlog = log(muM.class) - sigmaM^2/2, sdlog = sigmaM,
log = TRUE)[classified.data$obs.sex == "male"])
ll.miss <- sum(log(mixprop * dlnorm(unclassified.data$length,
meanlog = log(muF.unclass) - sigmaF^2/2, sdlog = sigmaF) +
(1 - mixprop) * dlnorm(unclassified.data$length,
meanlog = log(muM.unclass) - sigmaM^2/2, sdlog = sigmaM)))
ll.miss
ollike[i] <- ll.F.class + ll.M.class + ll.miss
ollike <- ll.F.class + ll.M.class + ll.miss
sum(classified.data$obs.sex == "male")
sum(classified.data$obs.sex == "female")
log(mixprop)
um(dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"])
sum(dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"])
log(muF.class) - sigmaF^2/2
sigmaF
sum(dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"])
dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"]
ll.F.class <- sum(classified.data$obs.sex == "female") *
log(mixprop) + sum(dlnorm(classified.data$length,
meanlog = log(muF.class) - sigmaF^2/2, sdlog = sigmaF,
log = TRUE)[classified.data$obs.sex == "female"], na.rm = TRUE)
ll.M.class <- sum(classified.data$obs.sex == "male") *
log(1 - mixprop) + sum(dlnorm(classified.data$length,
meanlog = log(muM.class) - sigmaM^2/2, sdlog = sigmaM,
log = TRUE)[classified.data$obs.sex == "male"], na.rm = TRUE)
ll.F.class
ll.M.class
ll.miss <- sum(log(mixprop * dlnorm(unclassified.data$length,
meanlog = log(muF.unclass) - sigmaF^2/2, sdlog = sigmaF) +
(1 - mixprop) * dlnorm(unclassified.data$length,
meanlog = log(muM.unclass) - sigmaM^2/2, sdlog = sigmaM)), na.rm = TRUE)
ll.miss
ollike[i] <- ll.F.class + ll.M.class + ll.miss
ollike <- ll.F.class + ll.M.class + ll.miss
ollike
if (plot.fit) {
tau.col <- col.vec[cut(complete.data$tau, breaks)]
par(mfrow = c(1, 1), mar = c(2, 2, 1, 1), oma = c(2,
2, 1, 1))
age.pred <- seq(min(complete.data$jitter.age), max(complete.data$jitter.age),
length = 50)
plot(complete.data$jitter.age, complete.data$length,
pch = ifelse(complete.data$obs.sex == "unclassified",
17, 19), col = paste(tau.col, 40, sep = ""),
ylim = c(0, max(complete.data$length)), xlim = c(0,
max(complete.data$jitter.age)), xlab = "",
ylab = "")
lines(age.pred, female_growth_fit(age.pred), col = "red")
lines(age.pred, male_growth_fit(age.pred), col = "blue")
mtext(side = 2, line = 2.5, text = "Length")
}
min(complete.data$jitter.age)
if (plot.fit) {
tau.col <- col.vec[cut(complete.data$tau, breaks)]
par(mfrow = c(1, 1), mar = c(2, 2, 1, 1), oma = c(2,
2, 1, 1))
age.pred <- seq(min(complete.data$jitter.age, na.rm=TRUE), max(complete.data$jitter.age, na.rm=TRUE),
length = 50)
plot(complete.data$jitter.age, complete.data$length,
pch = ifelse(complete.data$obs.sex == "unclassified",
17, 19), col = paste(tau.col, 40, sep = ""),
ylim = c(0, max(complete.data$length)), xlim = c(0,
max(complete.data$jitter.age)), xlab = "",
ylab = "")
lines(age.pred, female_growth_fit(age.pred), col = "red")
lines(age.pred, male_growth_fit(age.pred), col = "blue")
mtext(side = 2, line = 2.5, text = "Length")
}
tau.col <- col.vec[cut(complete.data$tau, breaks)]
tau.col
par(mfrow = c(1, 1), mar = c(2, 2, 1, 1), oma = c(2,
2, 1, 1))
age.pred <- seq(min(complete.data$jitter.age, na.rm=TRUE), max(complete.data$jitter.age, na.rm=TRUE),
length = 50)
age.pred
if (plot.fit) {
tau.col <- col.vec[cut(complete.data$tau, breaks)]
par(mfrow = c(1, 1), mar = c(2, 2, 1, 1), oma = c(2,
2, 1, 1))
age.pred <- seq(min(complete.data$jitter.age, na.rm=TRUE), max(complete.data$jitter.age, na.rm=TRUE),
length = 50)
plot(complete.data$jitter.age, complete.data$length,
pch = ifelse(complete.data$obs.sex == "unclassified",
17, 19), col = paste(tau.col, 40, sep = ""),
ylim = c(0, max(complete.data$length, na.rm=TRUE)), xlim = c(0,
max(complete.data$jitter.age, na.rm=TRUE)), xlab = "",
ylab = "")
lines(age.pred, female_growth_fit(age.pred), col = "red")
lines(age.pred, male_growth_fit(age.pred), col = "blue")
mtext(side = 2, line = 2.5, text = "Length")
}
tau.col <- col.vec[cut(complete.data$tau, breaks)]
par(mfrow = c(1, 1), mar = c(2, 2, 1, 1), oma = c(2,
2, 1, 1))
age.pred <- seq(min(complete.data$jitter.age, na.rm=TRUE), max(complete.data$jitter.age, na.rm=TRUE),
length = 50)
plot(complete.data$jitter.age, complete.data$length,
pch = ifelse(complete.data$obs.sex == "unclassified",
17, 19), col = paste(tau.col, 40, sep = ""),
ylim = c(0, max(complete.data$length, na.rm=TRUE)), xlim = c(0,
max(complete.data$jitter.age, na.rm=TRUE)), xlab = "",
ylab = "")
lines(age.pred, female_growth_fit(age.pred), col = "red")
lines(age.pred, male_growth_fit(age.pred), col = "blue")
mtext(side = 2, line = 2.5, text = "Length")
table(had.dat$age)
table(had.dat$age, useNA = "always")
dim(had.dat)
had.dat=filter(had.dat, !is.na(age))
dim(had.dat)
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
warnings()
ollike <- rep(NA, maxiter.em)
if (plot.fit) {
blue2red <- colorRampPalette(c("blue", "red"))
col.vec <- blue2red(100)
breaks <- seq(-0.1, 1.1, length = 100)
data$jitter.age <- jitter(data$age)
}
head(had.dat)
runApp('All data')
had.dat=LengthWeightAge[,c(6,2,3)]
names(had.dat)=c("age", "length", "obs.sex")
library(plyr)
had.dat$obs.sex=revalue(had.dat$obs.sex, c("F"="female", "M"="male", "U"="unclassified"))
dim(had.dat)
had.dat=filter(had.dat, !is.na(age))
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
class(vb.bind.fit)
head(vb.bind.fit)
names(LengthWeightAge)
had.dat=LengthWeightAge[,c(6,2,3,10)]
names(had.dat)=c("age", "length", "obs.sex", "Year")
had.dat$obs.sex=revalue(had.dat$obs.sex, c("F"="female", "M"="male", "U"="unclassified"))
dim(had.dat)
had.dat=filter(had.dat, !is.na(age))
dim(had.dat)
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "normal",
reltol = 1e-6, plot.fit=TRUE)
start.par <- c(c(501.9334, 463.6436), rep(0.3, 1), rep(1, 2),
rep(.1, 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "normal",
reltol = 1e-6, plot.fit=TRUE)
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
fitTyp <- function(df) {
vb_growth_mix(data = df, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
library(dplyr)
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
fitTyp <- function(df) {
vb_growth_mix(data = df, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
library(FSA)
library(magrittr)
library(dplyr)
library(nlstools)
library(FSAsim)
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
nest_by_year=had.dat %>%
group_by(Year)
nest_by_year
runApp('All data')
library(lhmixr)
library(FSA)
library(magrittr)
library(dplyr)
library(nlstools)
library(FSAsim)
had.dat=LengthWeightAge[,c(6,2,3,10)]
names(had.dat)=c("age", "length", "obs.sex", "Year")
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
LengthWeightAge=readRDS("LengthWeightAge.RDS")
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
had.dat=LengthWeightAge[,c(6,2,3,10)]
names(had.dat)=c("age", "length", "obs.sex", "Year")
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
had.dat=LengthWeightAge[,c(6,2,3,10)]
names(had.dat)=c("age", "length", "obs.sex", "Year")
library(plyr)
had.dat$obs.sex=revalue(had.dat$obs.sex, c("F"="female", "M"="male", "U"="unclassified"))
dim(had.dat)
had.dat=filter(had.dat, !is.na(age))
library(tidyverse)
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
fitTyp <- function(df) {
vb_growth_mix(data = df, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
}
LengthWeightAgeF=filter(LengthWeightAge, fldFishSex=="F")
dim(LengthWeightAgeF)
LengthWeightAgeM=filter(LengthWeightAge, fldFishSex=="M" & fldResult1<10)
dim(LengthWeightAgeM)
svTypF = vbStarts(fldFishLength ~ fldResult1, data=LengthWeightAgeF, plot=TRUE)
svTypM = vbStarts(fldFishLength ~ fldResult1, data=LengthWeightAgeM, plot=TRUE)
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
binding <- matrix(c(1:2, rep(3, 2), 4:7), ncol = 2, byrow = TRUE)
rownames(binding) <- c("lnlinf", "lnk", "lnnt0", "lnsigma")
colnames(binding) <- c("female", "male")
binding <- matrix(c(1:2, rep(3, 2), 4:7), ncol = 2, byrow = TRUE)
rownames(binding) <- c("lnlinf", "lnk", "lnnt0", "lnsigma")
colnames(binding) <- c("female", "male")
start.par <- c(c(log(501.9334), log(463.6436)), rep(log(0.3), 1), rep(log(1), 2),
rep(log(.1), 2))
start.list <- list(par = list(mixprop = 0.5, growth.par = start.par))
vb.bind.fit <- vb_growth_mix(data = had.dat, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
library(tidyverse)
nest_by_year=had.dat %>%
group_by(Year) %>%
nest()
fitTyp <- function(df) {
vb_growth_mix(data = df, start.list = start.list,
binding = binding, distribution = "lognormal",
reltol = 1e-6, plot.fit=TRUE)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
models
vb.bind.fit
models$model$coefficients
models$model[[coefficients]]
models$model[[4]]
model$coefficents
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp),
coeffs = map(fit, summary)
)
summary(vb.bind.fit)
vb.bind.fit[[4]]
glance(vb.bind.fit)
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp),
coeffs = map(fit, summary)
)
models
coeffs= models %>%
unnest(map(model, glance))
library(tidyr)
library(dplyr)
library(broom)
coeffs= models %>%
unnest(map(model, glance))
shiny::runApp('All data')
coeffs= models %>%
unnest(map(model, coefficients))
coeffs
fitTyp <- function(df) {
nls(fldFishLength ~ vbTyp(fldResult1, Linf, K, t0), data=df, start=svTyp)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
svTyp = vbStarts(fldFishLength ~ fldResult1, data=LengthWeightAge, plot=TRUE)
fitTyp <- function(df) {
nls(fldFishLength ~ vbTyp(fldResult1, Linf, K, t0), data=df, start=svTyp)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
nest_by_year=LengthWeightAge %>%
group_by(Year) %>%
nest()
fitTyp <- function(df) {
nls(fldFishLength ~ vbTyp(fldResult1, Linf, K, t0), data=df, start=svTyp)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
vbTyp = function(age, Linf, K, t0) Linf*(1-exp(-K*(age-t0)))
nest_by_year=LengthWeightAge %>%
group_by(Year) %>%
nest()
fitTyp <- function(df) {
nls(fldFishLength ~ vbTyp(fldResult1, Linf, K, t0), data=df, start=svTyp)
}
models <- nest_by_year %>%
mutate(
model  = data %>% map(fitTyp)
)
vbTyp(3, Linf=1200, K=0.13, t0=-2.0)
vbTyp(3, Linf=500, K=0.36, t0=-1.17)
vbTyp(2, Linf=500, K=0.36, t0=-1.17)
models
models$model[1]
models$model[[1]]
coeffs= models %>%
unnest(map(model, glance))
coeffs
coeffs= models %>%
unnest(map(model, summary))
coeffs
coeffs= models %>%
unnest(map(model, tidy))
coeffs
write_rds(coeffs, "Had_ceoffs.RDS")
