{
    "collab_server" : "",
    "contents" : "#\n# This is the server logic of a Shiny web application. You can run the \n# application by clicking 'Run App' above.\n#\n# Find out more about building applications with Shiny here:\n# \n#    http://shiny.rstudio.com/\n#\n\n########################\n### Reading in files ###\n########################\nspecies=\"Herring\"\nspeciesFAO=\"HER\"\n### Get Data - pull out valid stns\n# Used for Catch rate and CPUE\ndat=readRDS(\"dat.RDS\")\ndat$symbSize <- sqrt( dat$Kg_Per_Hr/ pi )\ndat$Year = as.numeric(substr(dat$Cruise,5,8))\n#dat$fldSex=revalue(dat$fldSex, c(\"f\"=\"F\"))\n\n### Get Data - pull out valid stns (grep & grepl are pattern matching functions, the latter ignores case)\nstn=readRDS(\"stn.RDS\")\n\n# Read in shapefiles\ndiv <- geojsonio::geojson_read(\"div_simple.geojson\", what = \"sp\")\ncont <- geojsonio::geojson_read(\"cont1_simple.geojson\", what = \"sp\")\n\n#Used for Distribution no/km2 and Abundance\ndata1=readRDS(\"data1.RDS\")\n##calculating swept area estimates\ncatch_km2<-with(data1,(1/AreaKmSq*CatchKg))\nNo_km2<-with(data1,(1/AreaKmSq*RaisedNo))\nArea<-ifelse(data1$ICESCODE==\"VIa\",\"VI\",\"VII\")\ndata1<-cbind(data1,catch_km2,No_km2, Area)\n#Agregate by Haul and species to get unique haul data for skt\nmapdata<-aggregate(data1[,c(\"CatchKg\", \"RaisedNo\", \"catch_km2\", \"No_km2\")], \n                   by=list(data1$Yr,data1$Haul,data1$LonDec, data1$LatDec),FUN=sum,  na.rm=TRUE)\nnames(mapdata) = c(\"Year\", \"Haul\", \"LonDec\", \"LatDec\", \"CatchKg\", \"RaisedNo\", \"catch_km2\", \"No_km2\")\nmapdata$symbSize <- sqrt( mapdata$No_km2/ pi )\n\n#Length/Weight and Length/Age plots\nLengthWeightAge=readRDS(\"LengthWeightAge.RDS\")\n\n#Used for Length Frequency and Total/Adults/Juvenile numbers\nLengthData=readRDS(\"LengthData.RDS\")\nLengthData$CatchNos30minHaul=LengthData$CatchNos/LengthData$fldTowDuration*30\n\n#Total Numbers\nTotalNumbersMap=aggregate(LengthData[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                          by=list(LengthData$Year,LengthData$fldCruiseStationNumber,\n                                  LengthData$fldShotLonDecimalDegrees, LengthData$fldShotLatDecimalDegrees),\n                          FUN=sum,  na.rm=TRUE)\nnames(TotalNumbersMap) = c(\"Year\", \"Haul\", \"LonDec\", \"LatDec\", \"CatchNos\", \"CatchNos30minHaul\")\nTotalNumbersMap$symbSize <- sqrt( TotalNumbersMap$CatchNos30minHaul/ pi )\n\n\n#Juveniles\nJuveniles= filter(LengthData, AgeClassification==\"Juvenile\")\nJuvNumbersMap=aggregate(Juveniles[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                        by=list(Juveniles$Year,Juveniles$fldCruiseStationNumber,\n                                Juveniles$fldShotLonDecimalDegrees, Juveniles$fldShotLatDecimalDegrees),\n                        FUN=sum,  na.rm=TRUE)\nnames(JuvNumbersMap) = c(\"Year\", \"Haul\", \"LonDec\", \"LatDec\", \"CatchNos\", \"CatchNos30minHaul\")\nJuvNumbersMap$symbSize <- sqrt( JuvNumbersMap$CatchNos30minHaul/ pi )\n\n\n#Adults\nAdults= filter(LengthData, AgeClassification==\"Adult\")\nAdultNumbersMap=aggregate(Adults[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                          by=list(Adults$Year,Adults$fldCruiseStationNumber,\n                                  Adults$fldShotLonDecimalDegrees, Adults$fldShotLatDecimalDegrees),\n                          FUN=sum,  na.rm=TRUE)\nnames(AdultNumbersMap) = c(\"Year\", \"Haul\", \"LonDec\", \"LatDec\", \"CatchNos\", \"CatchNos30minHaul\")\nAdultNumbersMap$symbSize <- sqrt( AdultNumbersMap$CatchNos30minHaul/ pi )\n\n\n#Coefficents\ncoeff_all=readRDS(\"coeffs/coeff_all.RDS\")\ncoeff_year=readRDS(\"coeffs/coeff_year.RDS\")\ncoeff_sex=readRDS(\"coeffs/coeff_sex.RDS\")\ncoeff_sex_year=readRDS(\"coeffs/coeff_sex_year.RDS\")\ncoeff_div=readRDS(\"coeffs/coeff_div.RDS\")\ncoeff_div_year=readRDS(\"coeffs/coeff_div_year.RDS\")\ncoeff_gear=readRDS(\"coeffs/coeff_gear.RDS\")\ncoeff_gear_year=readRDS(\"coeffs/coeff_gear_year.RDS\")\ncoeff_cohort=readRDS(\"coeffs/coeff_cohort.RDS\")\ncoeff_sex_cohort=readRDS(\"coeffs/coeff_sex_cohort.RDS\")\ncoeff_gear_cohort=readRDS(\"coeffs/coeff_gear_cohort.RDS\")\ncoeff_div_cohort=readRDS(\"coeffs/coeff_cohort_div.RDS\")\n\n#vbgm function\nvbTyp = function(age, Linf, K, t0) Linf*(1-exp(-K*(age-t0)))\n\n\n\n# Define server logic required\nshinyServer(function(input, output) {\n  ##########################\n  ### Reactive filtering ###\n  ##########################\n  #For Length/Weight and Length/Age plots\n  output$yearfilter=renderUI({\n    if(input$tabselected==\"lw\"  | input$tabselected==\"la\" | input$tabselected==\"co\"){\n      sliderInput(\"slideryear1\", \"Choose Year:\", min = 2003, max = 2017, value = 2017, step = NULL, \n                  sep = \"\", animate = TRUE)\n    }\n  })\n  \n  #Divfilter only appears if Division parameter selected\n  output$divfilter=renderUI({\n    if(input$parameter==\"Division\"){\n       divlist= factor(as.character(unique(dat$ICESCODE)))\n       checkboxGroupInput(\"division1\", h3(\"Select Division\"),choices=as.list(sort(divlist)))}\n  })\n  \n  \n  #####################\n  ### Download Data ###\n  #####################\n  \n  \n  output$downloadData_map <- downloadHandler(\n    filename = function() {\n      paste(speciesFAO, \"_Map_data\",\".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(dat, file, row.names = FALSE)\n    },\n    contentType = \"application/csv\"\n  )\n  \n\n  \n  output$downloadData_LWA <- downloadHandler(\n    filename = function() {\n      #lwa.data.full<- readRDS(\"LengthWeightAge.RDS\")\n      paste(speciesFAO, \"_Length_Weight_Age_data\",\".csv\", sep = \"\")\n    },\n    content = function(file) {\n      write.csv(LengthWeightAge, file, row.names = FALSE)\n    },\n    contentType = \"application/csv\"\n    )\n  \n  output$LWAdownload=renderUI({\n    if(input$tabselected==\"lw\"  | input$tabselected==\"la\" | input$tabselected==\"co\"){\n      downloadButton(\"downloadData_LWA\", \"Download Length Weight Age data\")\n    }\n  })\n\n  \n  ######################\n  ### Filtering data ###\n  ######################\n  juv_length_split=LengthData$preRecruitLength[1]\n  \n  cat=reactive({\n    dplyr::filter(dat, Cruise %in% paste0('IGFS', input$slideryear))\n  })\n  \n  haul = reactive({\n    dplyr::filter(stn, fldCruiseName==paste0('IGFS',  input$slideryear))\n  })\n  \n  mapdata1=reactive({\n    subset(mapdata, Year %in% input$slideryear & No_km2>0)\n  })\n  \n  TotalNumbers=reactive({\n    dplyr::filter(TotalNumbersMap, Year %in% input$slideryear & CatchNos30minHaul>0)\n  })\n  \n  JuvNumbers=reactive({\n    dplyr::filter(JuvNumbersMap, Year %in% input$slideryear & CatchNos30minHaul>0)\n  })\n  \n  AdultNumbers=reactive({\n    dplyr::filter(AdultNumbersMap, Year %in% input$slideryear & CatchNos30minHaul>0)\n  })\n  \n  \n  ###############\n  ### Mapping ###\n  ###############\n  html_legend <- \"<img src='x-mark-16.png'>Stations Surveyed\"\n  \n  output$mymap <- renderLeaflet({\n    mymap <-leaflet() %>%\n      setView(lng = -9, lat = 53, zoom = 6) %>%\n      addTiles() %>%\n      addProviderTiles(providers$Esri.OceanBasemap) %>%\n      addPolylines(color = \"grey\",data= div, group = \"ICES Sub-Areas\", weight = 3)%>%\n      addPolylines(color = \"darkgrey\",data= cont, group = \"ICES Sub-Areas\", weight = 3)%>%\n      #addControl(html = html_legend, position = \"bottomright\")%>%\n      addLegend(\"bottomright\",colors = c(\"blue\",\"purple\", \"black\", \"yellow\", \"green\"), \n                labels = c(\"Catch Rate kg/hr\", \"Distribution No/km<sup>2</sup>\",  \"Total No of Fish per 30 min Haul\", \n                           \"No of Juvenile Fish per 30 min Haul\", \"No of Adult Fish per 30 min Haul\"))%>%\n      hideGroup(\"Stations Surveyed\")\n    \n    return(mymap)\n  })\n  \n  icon.ship <- makeIcon(iconUrl  = 'x-mark-16.png', iconHeight = 7, iconWidth = 7)\n\n  observe({\n    new_zoom <- input$mymap_zoom\n    leafletProxy('mymap') %>%\n      clearGroup(group =  c(\"Catch Rate kg/hr\", \"Distribution No/km<sup>2</sup>\", \"Stations Surveyed\", \n                            \"Total No of Fish per 30 min Haul\", \"No of Juvenile Fish per 30 min Haul\", \"No of Adult Fish per 30 min Haul\"))%>%\n      #clearShapes() %>%\n      #addCircles(lng=haul()$fldShotLonDecimalDegrees, lat=haul()$fldShotLatDecimalDegrees, radius=10000/new_zoom, \n      #color = \"grey\", group=\"Stations Surveyed\", popup=paste(\"Station: \",haul()$fldPrimeStation, \"<br />\", \n      #\"Gear Type: \",haul()$Gear_Type)) %>%\n      addMarkers(lng=haul()$fldShotLonDecimalDegrees, lat=haul()$fldShotLatDecimalDegrees, icon =icon.ship, \n                 group=\"Stations Surveyed\", \n                 popup=paste(\"<b>Station:</b> \",haul()$fldPrimeStation, \"<br />\", \"<b>Gear Type:</b> \",haul()$Gear_Type,\"<br />\", \n                             \"<b>Tow Duration:</b> \",haul()$TowDurationMin, \"mins\", \"<br />\", \"<b>Door Spread:</b> \",haul()$DoorSpread, \"<br />\",  \n                             \"<b>Wing Spread:</b> \",haul()$fldWingSpread, \"<br />\", \"<b>Headline Height:</b> \",haul()$fldHeadlineHeight, \"<br />\",  \n                             \"<b>Distance KM:</b> \",round(haul()$Dist_Km,2),\"<br />\", \"<b>Stratum:</b> \", haul()$fldStratum)) %>%\n      addCircles(lng=cat()$Lon, lat=cat()$Lat, radius=10000*cat()$symbSize/new_zoom, group=\"Catch Rate kg/hr\", \n                 popup=paste(\"<b>Cruise:</b> \",cat()$Cruise, \"<br />\", \"<b>Haul</b>: \",cat()$Haul, \"<br />\", \n                             \"<b>Station:</b> \",cat()$Prime_Stn, \"<br />\", \"<b>Catch Kg/Hr:</b> \", round(cat()$Kg_Per_Hr,2))) %>%\n      addCircles(lng=mapdata1()$LonDec, lat=mapdata1()$LatDec, radius=2000*mapdata1()$symbSize/new_zoom, color = \"purple\",  \n                 group=\"Distribution No/km<sup>2</sup>\", popup=paste(\"<b>Haul:</b> \",mapdata1()$Haul, \"<br />\", \n                                                                     \"<b>No per km<sup>2</sup>:</b> \", round(mapdata1()$No_km2,0)))  %>%\n      addCircles(lng=TotalNumbers()$LonDec, lat=TotalNumbers()$LatDec, radius=5000*TotalNumbers()$symbSize/new_zoom, \n                 color = \"black\",  group=\"Total No of Fish per 30 min Haul\", \n                 popup=paste(\"<b>Haul:</b> \",TotalNumbers()$fldCruiseStationNumber, \"<br />\", \"<b>No of Fish per 30 min Haul:</b> \",\n                             round(TotalNumbers()$CatchNos30minHaul,0)))  %>%\n      addCircles(lng=JuvNumbers()$LonDec, lat=JuvNumbers()$LatDec, radius=5000*JuvNumbers()$symbSize/new_zoom, \n                 color = \"yellow\",  group=\"No of Juvenile Fish per 30 min Haul\", \n                 popup=paste(\"<b>Haul:</b> \",JuvNumbers()$Haul, \"<br />\", \"<b>No of Juvenile Fish per 30 min Haul:</b> \",\n                             round(JuvNumbers()$CatchNos30minHaul,0)))  %>%\n      addCircles(lng=AdultNumbers()$LonDec, lat=AdultNumbers()$LatDec, radius=5000*AdultNumbers()$symbSize/new_zoom, \n                 color = \"green\",  group=\"No of Adult Fish per 30 min Haul\", \n                 popup=paste(\"<b>Haul:</b> \",AdultNumbers()$Haul, \"<br />\", \"<b>No of Adult Fish per 30 min Haul:</b> \",\n                             round(AdultNumbers()$CatchNos30minHaul,0)))  %>%\n      addLayersControl(\n        baseGroups = c(\"Catch Rate kg/hr\", \"Distribution No/km<sup>2</sup>\",\"Total No of Fish per 30 min Haul\", \n                       \"No of Juvenile Fish per 30 min Haul\", \"No of Adult Fish per 30 min Haul\"),\n        overlayGroups = c(\"Stations Surveyed\"),\n        options = layersControlOptions(collapsed = FALSE)\n      )\n  })\n\n  \n  ############\n  ### CPUE ###\n  ############\n  output$cpueplotall=renderPlotly({\n    catchAll <- aggregate(list(KgHr=dat$Kg_Per_Hr), list(Cruise=dat$Cruise, Year= dat$Year),mean, na.rm=TRUE)\n    p=ggplot(dat, aes(x=Year, y=Kg_Per_Hr)) + geom_jitter(width = 0.05, colour=\"grey\") + \n      geom_line(data=catchAll, aes(x=Year, y =KgHr), size=1)+ ylab(\"KG/Hour\") +\n      theme_bw() + theme(legend.position = \"none\")\n    ggplotly(p)\n    })\n  \n  output$cpueplotparam=renderPlotly({\n    if(input$parameter==\"None\"){\n      p=NULL\n    }else if(input$parameter==\"Sex\"){\n      catchSex <- aggregate(list(KgHr=dat$Kg_Per_Hr), \n                            list(Cruise=dat$Cruise, Year=dat$Year, fldSex=dat$fldSex), mean, na.rm=TRUE)\n      p=ggplot(dat, aes(x=Year, y=Kg_Per_Hr, colour=fldSex)) + geom_jitter(width = 0.05) + \n        geom_line(data=catchSex, aes(x=Year, y =KgHr), size=1)+ ylab(\"KG/Hour\") +\n        facet_wrap(~fldSex) + theme_bw() + theme(legend.position = \"none\")\n    }else if(input$parameter==\"Gear\"){\n      catchGear <- aggregate(list(KgHr=dat$Kg_Per_Hr), \n                             list(Cruise=dat$Cruise, Year= dat$Year, GearDescription=dat$GearDescription), mean, na.rm=TRUE)\n      p=ggplot(dat, aes(x=Year, y=Kg_Per_Hr, colour=GearDescription)) + geom_jitter(width = 0.05) + \n        geom_line(data=catchGear, aes(x=Year, y =KgHr), size=1)+ ylab(\"KG/Hour\") +\n        facet_wrap(~GearDescription) + theme_bw() + theme(legend.position = \"none\")\n    }else if(input$parameter==\"Division\"){\n      if(is.null(input$division1)){\n        p=NULL\n      }else{\n        cpuebydiv=filter(dat, ICESCODE %in% c(input$division1))\n        catchArea <- aggregate(list(KgHr=cpuebydiv$Kg_Per_Hr), \n                               list(Cruise=cpuebydiv$Cruise, Year= cpuebydiv$Year,  \n                                    ICESCODE=cpuebydiv$ICESCODE), mean, na.rm=TRUE)\n        p=ggplot(cpuebydiv, aes(x=Year, y=Kg_Per_Hr, colour=ICESCODE)) + geom_jitter(width = 0.05) + \n          geom_line(data=catchArea, aes(x=Year, y =KgHr), size=1)+ ylab(\"KG/Hour\") +\n          facet_wrap(~ICESCODE) + theme_bw() + theme(legend.position = \"none\")\n      }\n    }\n    if(is.null(p)) plotly_empty(type = \"scatter\", mode=\"markers\") else ggplotly(p)\n  })\n  \n  #################\n  ### Abundance ###\n  #################\n  output$abundanceplotall=renderPlotly({\n    #Order the data\n    meanAll<-aggregate(data1[,c(\"catch_km2\",\"No_km2\")],by=list(data1$Yr),FUN=mean,  na.rm=TRUE) \n    names(meanAll)=c(\"Year\", \"catch_km2\", \"No_km2\")\n    p=ggplot(data1, aes(x=Yr, y=No_km2)) + geom_jitter(width = 0.05, colour=\"grey\") + \n      geom_line(data=meanAll, aes(x=Year, y =No_km2), size=1)+ \n      ylab(\"No/KM<sup>2</sup>\")+ xlab(\"Year\") +\n      theme_bw() + theme(legend.position = \"none\")\n    ggplotly(p)\n  })\n  \n  output$abundanceplotparam=renderPlotly({\n    if(input$parameter==\"None\"){\n      p=NULL\n    }else if(input$parameter==\"Sex\"){\n      meanSex<-aggregate(data1[,c(\"catch_km2\",\"No_km2\")], by=list(data1$Yr, data1$Sex),FUN=mean,  na.rm=TRUE)\n      names(meanSex)=c(\"Year\", \"Sex\", \"catch_km2\", \"No_km2\")\n      p=ggplot(data1,aes(x=Yr, y=No_km2, colour=Sex)) +geom_jitter(width=0.05) + \n        geom_line(data=meanSex, aes(x=Year, y =No_km2), size=1)+\n        labs(y = \"No/KM<sup>2</sup>\", x=\"Year\") +\n        facet_wrap(~Sex) + theme_bw() + theme(legend.position = \"none\")\n    }else if(input$parameter==\"Gear\"){\n      meanGear<-aggregate(data1[,c(\"catch_km2\",\"No_km2\")],\n                          by=list(data1$Yr, data1$fldGearDescription),FUN=mean,  na.rm=TRUE)\n      names(meanGear)=c(\"Year\", \"fldGearDescription\", \"catch_km2\", \"No_km2\")\n      p=ggplot(data1,aes(x=Yr, y=No_km2, colour=fldGearDescription)) +geom_jitter(width=0.05) + \n        geom_line(data=meanGear, aes(x=Year, y =No_km2), size=1)+\n        labs(y = \"No/KM<sup>2</sup>\", x=\"Year\") +\n        facet_wrap(~fldGearDescription) + theme_bw() + theme(legend.position = \"none\")\n    }else if(input$parameter==\"Division\"){\n      if(is.null(input$division1)){\n        ## \"Select a Division\"\n        p=NULL\n      }else{\n        abundancebydiv=filter(data1, ICESCODE %in% c(input$division1))\n        meanDiv<-aggregate(abundancebydiv[,c(\"catch_km2\",\"No_km2\")], \n                           by=list(abundancebydiv$Yr,abundancebydiv$ICESCODE), FUN=mean, na.rm=TRUE)\n        names(meanDiv)=c(\"Year\", \"ICESCODE\", \"catch_km2\", \"No_km2\")\n        p=ggplot(abundancebydiv, aes(x=Yr, y=No_km2, colour=ICESCODE)) + geom_jitter(width = 0.05) + \n          geom_line(data=meanDiv, aes(x=Year, y =No_km2), size=1)+\n          labs(y = \"No/KM<sup>2</sup>\", x=\"Year\") +\n          facet_wrap(~ICESCODE) + theme_bw() + theme(legend.position = \"none\")\n      }\n    }\n    if(is.null(p)) plotly_empty(type = \"scatter\", mode=\"markers\") else ggplotly(p)\n  })\n  \n  \n  ########################\n  ### Length Frequency ###\n  ########################\n  # Get recent data for current species\n  output$lfplotall=renderPlot({\n    lftotal<-aggregate(LengthData[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                       by=list(LengthData$Year,LengthData$LengthClass),FUN=sum,  na.rm=TRUE)\n    names(lftotal)=c(\"Year\", \"LengthClass\", \"CatchNos\", \"CatchNos30minHaul\")\n    ggplot(lftotal, aes(LengthClass, Year, height = CatchNos, group = Year, alpha=.5)) + \n      geom_density_ridges(stat = \"identity\", scale = 2.6) + \n      labs(y = \"Year\", x=\"Length Class\") +\n      theme_bw() + theme(legend.position = \"none\")+ geom_vline(xintercept=juv_length_split)\n  })\n  \n  output$lfplotparam=renderPlot({\n    if(input$parameter==\"None\"){\n    }else if(input$parameter==\"Sex\"){\n      lfsex<-aggregate(LengthData[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                       by=list(LengthData$Year,LengthData$LengthClass, LengthData$fldSex),FUN=sum,  na.rm=TRUE)\n      names(lfsex)=c(\"Year\", \"LengthClass\", \"fldSex\", \"CatchNos\", \"CatchNos30minHaul\")\n      ggplot(lfsex, aes(LengthClass, Year, height = CatchNos, fill=fldSex, group = Year, alpha=.5)) + \n        geom_density_ridges(stat = \"identity\", scale = 2.6) + \n        labs(y = \"Year\", x=\"Length Class\") +\n        facet_wrap(~fldSex) + theme_bw() + theme(legend.position = \"none\")+ geom_vline(xintercept=juv_length_split)\n    }else if(input$parameter==\"Gear\"){\n      lfgear<-aggregate(LengthData[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                        by=list(LengthData$Year,LengthData$LengthClass, LengthData$fldGearDescription),FUN=sum,  na.rm=TRUE)\n      names(lfgear)=c(\"Year\", \"LengthClass\", \"fldGearDescription\", \"CatchNos\", \"CatchNos30minHaul\")\n      AllOptions=expand(lfgear, Year, fldGearDescription, LengthClass)\n      MakingZeros=left_join(AllOptions, lfgear, by=c(\"Year\", \"fldGearDescription\", \"LengthClass\"))\n      MakingZeros$CatchNos[is.na(MakingZeros$CatchNos)] <- 0\n      MakingZeros$CatchNos30minHaul[is.na(MakingZeros$CatchNos30minHaul)] <- 0\n      ggplot(MakingZeros, aes(LengthClass, Year, height = CatchNos, fill=fldGearDescription,  group = Year, alpha=.5)) + \n        geom_density_ridges(stat = \"identity\", scale = 2.6) + labs(y = \"Year\", x=\"Length Class\") +\n        facet_wrap(~fldGearDescription) + theme_bw() + theme(legend.position = \"none\")+ geom_vline(xintercept=juv_length_split)\n    }else if(input$parameter==\"Division\"){\n      if(is.null(input$division1)){\n        ## \"Select a Division\"\n      }else{\n        lfdiv<-aggregate(LengthData[,c(\"CatchNos\", \"CatchNos30minHaul\")],\n                         by=list(LengthData$Year,LengthData$LengthClass, LengthData$ICESCODE),FUN=sum,  na.rm=TRUE)\n        names(lfdiv)=c(\"Year\", \"LengthClass\", \"ICESCODE\", \"CatchNos\", \"CatchNos30minHaul\")\n        \n        nest_by_year=lfdiv %>%\n          group_by(ICESCODE, Year) %>%\n          nest()\n        \n        List_LC=function(df) {\n          (min(df$LengthClass, na.rm = TRUE)-1):(max(df$LengthClass, na.rm = TRUE)+1)}\n        models <- nest_by_year %>%\n          mutate(LengthClass  = data %>% map(List_LC))\n        testing=unnest(models, LengthClass)\n        \n        MakingZeros=left_join(testing, lfdiv, by = c(\"ICESCODE\", \"Year\", \"LengthClass\"))\n        MakingZeros$CatchNos[is.na(MakingZeros$CatchNos)] <- 0\n        MakingZeros$CatchNos30minHaul[is.na(MakingZeros$CatchNos30minHaul)] <- 0\n        \n        lfbydiv=filter(MakingZeros, ICESCODE %in% c(input$division1))\n        ggplot(lfbydiv, aes(LengthClass, Year, height = CatchNos, fill=ICESCODE, group = Year, alpha=.5)) + \n          geom_density_ridges(stat = \"identity\", scale = 2.6) + \n          labs(y = \"Year\", x=\"Length Class\") +\n          facet_wrap(~ICESCODE) + theme_bw() + theme(legend.position = \"none\")+ geom_vline(xintercept=juv_length_split)\n      }\n    }\n  })\n  \n  ##########################\n  ### Length/Weight Plot ###\n  ##########################\n  LengthWeightAgeSp=reactive({\n    if(is.null(input$slideryear1)){\n      filter(LengthWeightAge, fldFishWholeWeight!=\"NA\" & Year == 2017)\n    }else{\n      filter(LengthWeightAge, fldFishWholeWeight!=\"NA\" & Year == input$slideryear1)}\n    })\n  \n  LengthWeightAgeSp1=reactive({\n    filter(LengthWeightAge, fldFishWholeWeight!=\"NA\")\n  })\n  \n  output$lwplot=renderPlotly({\n    if(input$parameter==\"None\"){\n      LengthWeightAgeSp=LengthWeightAgeSp()[order(LengthWeightAgeSp()$length),]\n      fit1=lm(log10(fldFishWholeWeight) ~ log10(length), data = LengthWeightAgeSp)\n      p=plot_ly(LengthWeightAgeSp, x = ~length, y = ~fldFishWholeWeight, type = 'scatter', \n                text=~paste(\"Length:\",length,\"cm\",\"<br>Weight:\",fldFishWholeWeight),\n                hoverinfo = 'text',mode = 'markers', marker =list(opacity = 0.5)) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Weight\"),\n               xaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSp1()$length),\n                                                            max(LengthWeightAgeSp1()$length)+1)),\n               yaxis = list(title = 'Weight (g)', range = c(0, max(LengthWeightAgeSp1()$fldFishWholeWeight, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = FALSE) %>%\n        add_trace(x=~length, y=10^(fitted(fit1)), type=\"scatter\", \n                  mode='lines+markers',\n                  line = list(color = '#1f77b4', shape=\"spline\"),\n                  marker = list(color = 'grey', opacity=0))\n      p$elementId <- NULL\n    }else if(input$parameter==\"Sex\"){\n      LengthWeightAgeSp=LengthWeightAgeSp()[order(LengthWeightAgeSp()$length),]\n      fit2=lm(log10(fldFishWholeWeight) ~ log10(length) + obs.sex, data = LengthWeightAgeSp)\n      p <- plot_ly(LengthWeightAgeSp, x = ~length, y = ~fldFishWholeWeight, type = 'scatter', \n                   text=~paste(\"Length:\",length,\"cm\",\"<br>Weight:\",fldFishWholeWeight, \"<br>Sex:\",obs.sex),\n                   color = ~obs.sex, colors=c('unclassified'='#999999','male'='#6699ff','female'='#ff66cc'),\n                   hoverinfo = 'text',mode = 'markers', marker =list(opacity = 0.5)) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Weight (points coloured by sex)\"),\n               xaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSp1()$length),\n                                                            max(LengthWeightAgeSp1()$length)+1)),\n               yaxis = list(title = 'Weight (g)', range = c(0, max(LengthWeightAgeSp1()$fldFishWholeWeight, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = TRUE) %>%\n        add_trace(x=~length, y=10^(fitted(fit2)), type=\"scatter\", \n                  mode='lines+markers',\n                  line = list(shape=\"spline\"),\n                  marker = list(color = 'grey', opacity=0), showlegend = FALSE)\n      p$elementId <- NULL\n    }else if(input$parameter==\"Gear\"){\n      p <- plot_ly(LengthWeightAgeSp(), x = ~length, y = ~fldFishWholeWeight, type = 'scatter', mode = 'markers',\n                   text=~paste(\"Length:\",length,\"cm\",\"<br>Weight:\",fldFishWholeWeight,\n                               \"<br>Gear type:\",fldGearDescription),\n                   hoverinfo = 'text',color= ~fldGearDescription, colors=c(\"#132B43\", \"#56B1F7\"),\n                   marker =list(opacity = 0.5)) %>%  \n        layout(hovermode=\"closest\", title=paste(species,\"Length vs Weight (points coloured by gear)\"),\n               xaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSp1()$length),\n                                                            max(LengthWeightAgeSp1()$length)+1)),\n               yaxis = list(title = 'Weight (g)', range = c(0, max(LengthWeightAgeSp1()$fldFishWholeWeight, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = TRUE)\n      p$elementId <- NULL\n    }else if(input$parameter==\"Division\"){\n      if(is.null(input$division1)){\n        ## \"Select a Division\"\n        p=NULL\n      }else{\n        grspnew.w2 <- filter(LengthWeightAgeSp(), ICESCODE %in% c(input$division1))\n        p <- plot_ly(grspnew.w2, x = ~length, y = ~fldFishWholeWeight, type = 'scatter', mode = 'markers',\n                     colors=c('VIa'='#8DD3C7','VIIb'='#FDB462','VIIc'='#BEBADA','VIIg'='#FB8072','VIIj'='#80B1D3','VIIk'='#FFFFB3'),\n                     text=~paste(\"Length:\",length,\"cm\",\"<br>Weight:\",fldFishWholeWeight, \"<br>Division:\",ICESCODE),\n                     hoverinfo = 'text',color= ~ICESCODE, marker =list(opacity = 0.5)) %>%  \n          layout(hovermode=\"closest\", title=paste(species,\"Length vs Weight (points coloured by divisions)\"),\n                 xaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSp1()$length),\n                                                              max(LengthWeightAgeSp1()$length)+1)),\n                 yaxis = list(title = 'Weight (g)', range = c(0, max(LengthWeightAgeSp1()$fldFishWholeWeight, na.rm = T)*1.05)),\n                 margin=(list(t=70)), showlegend = TRUE)\n        p$elementId <- NULL\n      }\n    }\n    if(is.null(p)) plotly_empty(type = \"scatter\", mode=\"markers\") else p\n  })\n  \n  ##################\n  ### Length/Age ###\n  ##################\n  LengthWeightAgeSpA=reactive({\n    if(is.null(input$slideryear1)){\n      filter(LengthWeightAge, age!=\"NA\" & Year == 2017)\n    }else{\n      filter(LengthWeightAge, age!=\"NA\" & Year == input$slideryear1)}\n  })\n  \n  LengthWeightAgeSpA1=reactive({\n    filter(LengthWeightAge, age!=\"NA\")\n  })\n  output$coeff_table=renderTable({\n    if(input$parameter==\"None\"){    \n      alldata=data.frame(Data= \"All data\", Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]])\n      yeardata=data.frame(Data= paste(input$slideryear1, \"data\"), \n                        Linf=coeff_year[which(coeff_year$Year==input$slideryear1), \"Linf\"],\n                        K=coeff_year[which(coeff_year$Year==input$slideryear1), \"K\"], \n                        t0=coeff_year[which(coeff_year$Year==input$slideryear1), \"t0\"])\n      rbind(alldata, yeardata)\n    }else if(input$parameter==\"Sex\"){\n      alldata=data.frame(Data= \"All data\", Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]])\n      alldataF=data.frame(Data= paste(\"All Females\"), \n                          Linf=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnlinf\"), \"Female\"]),\n                          K=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnk\"), \"Female\"]), \n                          t0=-exp(coeff_sex[which(coeff_sex$Parameter ==\"lnnt0\"), \"Female\"]))\n      alldataM=data.frame(Data= paste(\"All Males\"), \n                          Linf=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnlinf\"), \"Male\"]),\n                          K=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnk\"), \"Male\"]), \n                          t0=-exp(coeff_sex[which(coeff_sex$Parameter ==\"lnnt0\"), \"Male\"]))\n      yeardataF=data.frame(Data= paste(input$slideryear1, \" Females\"), \n                           Linf=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnlinf\" & coeff_sex_year$Year==input$slideryear1), \"Female\"]),\n                           K=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnk\"& coeff_sex_year$Year==input$slideryear1), \"Female\"]), \n                           t0=-exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnnt0\"& coeff_sex_year$Year==input$slideryear1), \"Female\"]))\n      yeardataM=data.frame(Data= paste(input$slideryear1, \" Males\"), \n                           Linf=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnlinf\" & coeff_sex_year$Year==input$slideryear1), \"Male\"]),\n                           K=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnk\"& coeff_sex_year$Year==input$slideryear1), \"Male\"]), \n                           t0=-exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnnt0\"& coeff_sex_year$Year==input$slideryear1), \"Male\"]))\n      rbind(alldata, alldataF, alldataM, yeardataF, yeardataM)\n    }else if(input$parameter==\"Gear\"){\n      alldata=data.frame(Data= \"All data\", Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]])\n      alldataA=data.frame(Data= paste(\"All GOV 3647 Groundgear A\"), \n                          Linf=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear A\"), \"Linf\"],\n                          K=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear A\"), \"K\"], \n                          t0=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear A\"), \"t0\"])\n      alldataD=data.frame(Data= paste(\"All GOV 3647 Groundgear D\"), \n                          Linf=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear D\"), \"Linf\"],\n                          K=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear D\"), \"K\"], \n                          t0=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear D\"), \"t0\"])\n      yeardataA=data.frame(Data= paste(input$slideryear1, \" GOV 3647 Groundgear A\"), \n                           Linf=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear A\" & coeff_gear_year$Year==input$slideryear1), \"Linf\"],\n                           K=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear A\" & coeff_gear_year$Year==input$slideryear1), \"K\"], \n                           t0=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear A\" & coeff_gear_year$Year==input$slideryear1), \"t0\"])\n      yeardataD=data.frame(Data= paste(input$slideryear1, \" GOV 3647 Groundgear D\"), \n                           Linf=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear D\" & coeff_gear_year$Year==input$slideryear1), \"Linf\"],\n                           K=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear D\" & coeff_gear_year$Year==input$slideryear1), \"K\"], \n                           t0=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear D\" & coeff_gear_year$Year==input$slideryear1), \"t0\"])\n      rbind(alldata, alldataA, alldataD, yeardataA, yeardataD)\n    }else if(input$parameter==\"Division\"){\n      yeardataVIa=data.frame(Data= paste(input$slideryear1, \" VIa division\"), \n                             Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIa\" & coeff_div_year$Year==input$slideryear1), \"Linf\"],\n                             K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIa\" & coeff_div_year$Year==input$slideryear1), \"K\"],\n                             t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIa\" & coeff_div_year$Year==input$slideryear1), \"t0\"])\n      yeardataVIIb=data.frame(Data= paste(input$slideryear1, \" VIIb division\"), \n                              Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIb\" & coeff_div_year$Year==input$slideryear1), \"Linf\"],\n                              K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIb\" & coeff_div_year$Year==input$slideryear1), \"K\"],\n                              t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIb\" & coeff_div_year$Year==input$slideryear1), \"t0\"])\n      yeardataVIIc=data.frame(Data= paste(input$slideryear1, \" VIIc division\"), \n                              Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIc\" & coeff_div_year$Year==input$slideryear1), \"Linf\"],\n                              K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIc\" & coeff_div_year$Year==input$slideryear1), \"K\"],\n                              t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIc\" & coeff_div_year$Year==input$slideryear1), \"t0\"])\n      yeardataVIIg=data.frame(Data= paste(input$slideryear1, \" VIIg division\"), \n                              Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIg\" & coeff_div_year$Year==input$slideryear1), \"Linf\"],\n                              K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIg\" & coeff_div_year$Year==input$slideryear1), \"K\"], \n                              t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIg\" & coeff_div_year$Year==input$slideryear1), \"t0\"])\n      yeardataVIIj=data.frame(Data= paste(input$slideryear1, \" VIIj division\"), \n                              Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIj\" & coeff_div_year$Year==input$slideryear1), \"Linf\"],\n                              K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIj\" & coeff_div_year$Year==input$slideryear1), \"K\"], \n                              t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIj\" & coeff_div_year$Year==input$slideryear1), \"t0\"])\n      yeardataVIIk=data.frame(Data= paste(input$slideryear1, \" VIIk division\"), \n                              Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIk\" & coeff_div_year$Year==input$slideryear1 ), \"Linf\"],\n                              K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIk\" & coeff_div_year$Year==input$slideryear1), \"K\"],\n                              t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIk\" & coeff_div_year$Year==input$slideryear1), \"t0\"])\n      rbind(yeardataVIa, yeardataVIIb, yeardataVIIc, yeardataVIIg, yeardataVIIj, yeardataVIIk)    \n      }\n    })\n  \n  output$laplot=renderPlotly({\n    LWA_fish=LengthWeightAgeSpA()\n    x=seq(0, max(LengthWeightAgeSpA1()$age), length.out = 199)\n    predicted=data.frame(age=x, predlengthAll= vbTyp(x, Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]]),\n                         predlengthYear= vbTyp(x, \n                                               Linf= coeff_year[which(coeff_year$Year==input$slideryear1), \"Linf\"],\n                                               K=coeff_year[which(coeff_year$Year==input$slideryear1), \"K\"], \n                                               t0=coeff_year[which(coeff_year$Year==input$slideryear1), \"t0\"]),\n                         predlengthF= vbTyp(x, Linf=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnlinf\"), \"Female\"]),\n                                            K=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnk\"), \"Female\"]), \n                                            t0=-exp(coeff_sex[which(coeff_sex$Parameter ==\"lnnt0\"), \"Female\"])),\n                         predlengthM= vbTyp(x, Linf=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnlinf\"), \"Male\"]),\n                                            K=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnk\"), \"Male\"]), \n                                            t0=-exp(coeff_sex[which(coeff_sex$Parameter ==\"lnnt0\"), \"Male\"])),\n                         predlengthFYear= vbTyp(x, Linf=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnlinf\" & coeff_sex_year$Year==input$slideryear1), \"Female\"]),\n                                                K=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnk\"& coeff_sex_year$Year==input$slideryear1), \"Female\"]), \n                                                t0=-exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnnt0\"& coeff_sex_year$Year==input$slideryear1), \"Female\"])),\n                         predlengthMYear= vbTyp(x, Linf=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnlinf\" & coeff_sex_year$Year==input$slideryear1), \"Male\"]),\n                                                K=exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnk\"& coeff_sex_year$Year==input$slideryear1), \"Male\"]), \n                                                t0=-exp(coeff_sex_year[which(coeff_sex_year$Parameter ==\"lnnt0\"& coeff_sex_year$Year==input$slideryear1), \"Male\"])),\n                         predlengthGearA= vbTyp(x, \n                                              Linf= coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear A\"), \"Linf\"],\n                                              K=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear A\"), \"K\"],\n                                              t0=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear A\"), \"t0\"]),\n                         predlengthGearAyear= vbTyp(x, \n                                                Linf=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear A\" & coeff_gear_year$Year==input$slideryear1), \"Linf\"],\n                                                K=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear A\" & coeff_gear_year$Year==input$slideryear1), \"K\"],\n                                                t0=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear A\" & coeff_gear_year$Year==input$slideryear1), \"t0\"]),\n                         predlengthGearD= vbTyp(x, \n                                                Linf= coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear D\"), \"Linf\"],\n                                                K=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear D\"), \"K\"],\n                                                t0=coeff_gear[which(coeff_gear$Gear ==\"GOV 3647 Groundgear D\"), \"t0\"]),\n                         predlengthGearDyear= vbTyp(x, \n                                                    Linf=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear D\" & coeff_gear_year$Year==input$slideryear1), \"Linf\"],\n                                                    K=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear D\" & coeff_gear_year$Year==input$slideryear1), \"K\"],\n                                                    t0=coeff_gear_year[which(coeff_gear_year$Gear ==\"GOV 3647 Groundgear D\" & coeff_gear_year$Year==input$slideryear1), \"t0\"]),\n                         predlengthVIa= vbTyp(x, \n                                              Linf= coeff_div[which(coeff_div$ICESCODE==\"VIa\"), \"Linf\"][[1]],\n                                              K=coeff_div[which(coeff_div$ICESCODE==\"VIa\"), \"K\"][[1]],\n                                              t0=coeff_div[which(coeff_div$ICESCODE==\"VIa\"), \"t0\"][[1]]),\n                         predlengthVIaYear= vbTyp(x, \n                                                  Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIa\" & coeff_div_year$Year==input$slideryear1), \"Linf\"][[1]],\n                                                  K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIa\" & coeff_div_year$Year==input$slideryear1), \"K\"][[1]],\n                                                  t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIa\" & coeff_div_year$Year==input$slideryear1), \"t0\"][[1]]),\n                         predlengthVIIb= vbTyp(x, \n                                               Linf= coeff_div[which(coeff_div$ICESCODE==\"VIIb\"), \"Linf\"][[1]],\n                                               K=coeff_div[which(coeff_div$ICESCODE==\"VIIb\" ), \"K\"][[1]],\n                                               t0=coeff_div[which(coeff_div$ICESCODE==\"VIIb\"), \"t0\"][[1]]),\n                         predlengthVIIbYear= vbTyp(x, \n                                                   Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIb\" & coeff_div_year$Year==input$slideryear1), \"Linf\"][[1]],\n                                                   K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIb\" & coeff_div_year$Year==input$slideryear1), \"K\"][[1]], \n                                                   t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIb\" & coeff_div_year$Year==input$slideryear1 ), \"t0\"][[1]]),\n                         predlengthVIIc= vbTyp(x, \n                                               Linf= coeff_div[which(coeff_div$ICESCODE==\"VIIc\"), \"Linf\"][[1]],\n                                               K=coeff_div[which(coeff_div$ICESCODE==\"VIIc\"), \"K\"][[1]], \n                                               t0=coeff_div[which(coeff_div$ICESCODE==\"VIIc\"), \"t0\"][[1]]),\n                         predlengthVIIcYear= vbTyp(x, \n                                                   Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIc\" & coeff_div_year$Year==input$slideryear1), \"Linf\"][[1]],\n                                                   K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIc\" & coeff_div_year$Year==input$slideryear1 ), \"K\"][[1]], \n                                                   t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIc\" & coeff_div_year$Year==input$slideryear1 ), \"t0\"][[1]]),\n                         predlengthVIIg= vbTyp(x, \n                                               Linf= coeff_div[which(coeff_div$ICESCODE==\"VIIg\"), \"Linf\"][[1]],\n                                               K=coeff_div[which(coeff_div$ICESCODE==\"VIIg\"), \"K\"][[1]],\n                                               t0=coeff_div[which(coeff_div$ICESCODE==\"VIIg\"), \"t0\"][[1]]),\n                         predlengthVIIgYear= vbTyp(x, \n                                                   Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIg\" & coeff_div_year$Year==input$slideryear1 ), \"Linf\"][[1]],\n                                                   K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIg\" & coeff_div_year$Year==input$slideryear1 ), \"K\"][[1]],\n                                                   t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIg\" & coeff_div_year$Year==input$slideryear1), \"t0\"][[1]]),\n                         predlengthVIIj= vbTyp(x, \n                                               Linf= coeff_div[which(coeff_div$ICESCODE==\"VIIj\"), \"Linf\"][[1]],\n                                               K=coeff_div[which(coeff_div$ICESCODE==\"VIIj\"), \"K\"][[1]], \n                                               t0=coeff_div[which(coeff_div$ICESCODE==\"VIIj\"), \"t0\"][[1]]),\n                         predlengthVIIjYear= vbTyp(x, \n                                                   Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIj\" & coeff_div_year$Year==input$slideryear1), \"Linf\"][[1]],\n                                                   K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIj\" & coeff_div_year$Year==input$slideryear1), \"K\"][[1]],\n                                                   t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIj\" & coeff_div_year$Year==input$slideryear1), \"t0\"][[1]]),\n                         predlengthVIIk= vbTyp(x, \n                                               Linf= coeff_div[which(coeff_div$ICESCODE==\"VIIk\"), \"Linf\"][[1]],\n                                               K=coeff_div[which(coeff_div$ICESCODE==\"VIIk\"), \"K\"][[1]], \n                                               t0=coeff_div[which(coeff_div$ICESCODE==\"VIIk\"), \"t0\"][[1]]),\n                         predlengthVIIkYear= vbTyp(x, \n                                                   Linf= coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIk\" & coeff_div_year$Year==input$slideryear1 ), \"Linf\"][[1]],\n                                                   K=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIk\" & coeff_div_year$Year==input$slideryear1), \"K\"][[1]],\n                                                   t0=coeff_div_year[which(coeff_div_year$ICESCODE==\"VIIk\" & coeff_div_year$Year==input$slideryear1), \"t0\"][[1]])\n    )\n    \n    \n    if(dim(LWA_fish)[1]==0){\n      p=NULL\n    }else if(input$parameter==\"None\"){\n      p=plot_ly() %>% \n        add_trace(data=LWA_fish, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",\n                  text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age),\n                  hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = FALSE) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Age\"),\n               xaxis = list(title = 'Age (years)', zeroline=FALSE,\n                            range= c(min(LengthWeightAgeSpA1()$age)-.1,max(LengthWeightAgeSpA1()$age)+1)),\n               yaxis = list(title = 'Length (cm)', zeroline=FALSE,\n                            range = c(0, max(LengthWeightAgeSpA1()$length, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = TRUE)\n      if(all(!is.na(predicted$predlengthAll))){\n        p = p %>%\n          add_trace(data=predicted, x = ~age, y = ~predlengthAll, type=\"scatter\", mode = \"lines\",\n                  line = list(shape=\"spline\", color=\"grey\"), name=\"All data fit\", hoverinfo=\"none\")\n      }\n      if(all(!is.na(predicted$predlengthYear))){\n        p = p %>%\n          add_trace(data=predicted, x = ~age, y = ~predlengthYear, type=\"scatter\", mode = \"lines\",\n                  line = list(shape=\"spline\", color=\"#1f77b4\"), name=paste(input$slideryear1, \"data fit\"), hoverinfo=\"none\")\n      }\n      p$elementId <- NULL\n    }else if(input$parameter==\"Sex\"){\n      p=plot_ly() %>% \n        add_trace(data=LWA_fish, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",\n                  color = ~obs.sex, colors=c('unclassified'='#999999','male'='#6699ff','female'='#ff66cc'),\n                  text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age, \"<br>Sex:\", obs.sex),\n                  hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = TRUE) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Age (points coloured by sex)\"),\n               xaxis = list(title = 'Age (years)', zeroline=FALSE,\n                            range= c(min(LengthWeightAgeSpA1()$age)-.1,max(LengthWeightAgeSpA1()$age)+1)),\n               yaxis = list(title = 'Length (cm)', zeroline=FALSE,\n                            range = c(0, max(LengthWeightAgeSpA1()$length, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = TRUE)\n      if(all(!is.na(predicted$predlengthFYear))){\n        p = p %>%\n        add_trace(data=predicted, x = ~age, y = ~predlengthFYear, type=\"scatter\", mode = \"lines\",\n                  line = list(shape=\"spline\", color=\"#ff66cc\"), name=paste(input$slideryear1,\"Female data fit\"), hoverinfo=\"none\")\n      }\n      if(all(!is.na(predicted$predlengthMYear))){\n        p = p %>%\n          add_trace(data=predicted, x = ~age, y = ~predlengthMYear, type=\"scatter\", mode = \"lines\",\n                  line = list(shape=\"spline\", color=\"#6699ff\"), name=paste(input$slideryear1,\"Male data fit\"), hoverinfo=\"none\")\n      }\n      p$elementId <- NULL\n    }else if(input$parameter==\"Gear\"){\n      p=plot_ly() %>% \n        add_trace(data=LWA_fish, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",\n                  color = ~fldGearDescription, colors=c(\"#132B43\", \"#56B1F7\"),\n                  text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age, \"<br>Gear type:\",fldGearDescription),\n                  hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = TRUE) %>%\n        layout(hovermode=\"closest\", title=paste(\"Length vs Age (points coloured by gear)\"),\n               yaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSpA1()$length), \n                                                            max(LengthWeightAgeSpA1()$length)+1), zeroline = FALSE),\n               xaxis = list(title = 'Age', range = c(-0.1, max(LengthWeightAgeSpA1()$age, na.rm = T)*1.05), \n                            zeroline = FALSE), margin=(list(t=70)), showlegend = TRUE) \n      if(all(!is.na(predicted$predlengthGearAyear))){\n        p = p %>%\n          add_trace(data=predicted, x = ~age, y = ~predlengthGearAyear, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color=\"#132B43\"), name=\"GOV 3647 Groundgear A\", hoverinfo=\"none\")\n        }\n      if(all(!is.na(predicted$predlengthGearDyear))){\n          p = p %>%\n            add_trace(data=predicted, x = ~age, y = ~predlengthGearDyear, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color=\"#56B1F7\"), name=\"GOV 3647 Groundgear D\", hoverinfo=\"none\")  \n        }\n      p$elementId <- NULL\n    }else if(input$parameter==\"Division\"){\n      if(is.null(input$division1)){\n        ## \"Select a Division\"\n        p=NULL\n      }else{\n        grspnew.w2 = filter(LengthWeightAgeSpA(), ICESCODE %in% c(input$division1))\n        if(dim(grspnew.w2)[1]==0){\n          p=NULL \n        }else{\n          \n          p=plot_ly() %>% \n          add_trace(data=grspnew.w2, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",color= ~ICESCODE,\n                    colors=c('VIa'='#8DD3C7','VIIb'='#FDB462','VIIc'='#BEBADA','VIIg'='#FB8072','VIIj'='#80B1D3','VIIk'='#FFFFB3'),\n                    text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age, \"<br>Division:\",ICESCODE),\n                    hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = TRUE) %>% \n         layout(hovermode=\"closest\", title=paste(\"Age vs Length (points coloured by divisions)\"),\n                 yaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSpA1()$length), \n                                                              max(LengthWeightAgeSpA1()$length)+1), zeroline = FALSE),\n                 xaxis = list(title = 'Age', range = c(-0.1, max(LengthWeightAgeSpA1()$age, na.rm = T)*1.05), \n                              zeroline = FALSE), margin=(list(t=70)), showlegend = TRUE)\n          \n          if(all(!is.na(predicted$predlengthVIaYear)) & \"VIa\" %in% input$division1 ){\n            p=p %>% add_trace(data=predicted, x = ~age, y = ~predlengthVIaYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#8DD3C7'), name=paste(input$slideryear1,\"VIa data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predicted$predlengthVIIbYear))& \"VIIb\" %in% input$division1 ){\n            p=p %>% add_trace(data=predicted, x = ~age, y = ~predlengthVIIbYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#FDB462'), name=paste(input$slideryear1,\"VIIb data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predicted$predlengthVIIcYear))& \"VIIc\" %in% input$division1 ){\n            p=p %>% add_trace(data=predicted, x = ~age, y = ~predlengthVIIcYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#BEBADA'), name=paste(input$slideryear1,\"VIIc data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predicted$predlengthVIIgYear))& \"VIIg\" %in% input$division1 ){\n            p=p %>% add_trace(data=predicted, x = ~age, y = ~predlengthVIIgYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#FB8072'), name=paste(input$slideryear1,\"VIIg data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predicted$predlengthVIIjYear))& \"VIIj\" %in% input$division1 ){\n            p=p %>% add_trace(data=predicted, x = ~age, y = ~predlengthVIIjYear, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color='#80B1D3'), name=paste(input$slideryear1,\"VIIj data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predicted$predlengthVIIkYear))& \"VIIk\" %in% input$division1 ){\n            p=p %>% add_trace(data=predicted, x = ~age, y = ~predlengthVIIkYear, type=\"scatter\", mode = \"lines\",\n                            line = list(shape=\"spline\", color='#FFFFB3'), name=paste(input$slideryear1,\"VIIk data fit\"), hoverinfo=\"none\")}  \n         \n          p$elementId <- NULL\n        }\n      }\n    }\n    if(is.null(p)) plotly_empty(type = \"scatter\", mode=\"markers\") else p\n  })\n  \n  \n  output$predlength=reactive({\n    round(vbTyp(input$age, \n          Linf= coeff_year[which(coeff_year$Year==input$slideryear1), \"Linf\"],\n          K=coeff_year[which(coeff_year$Year==input$slideryear1), \"K\"], \n          t0=coeff_year[which(coeff_year$Year==input$slideryear1), \"t0\"]),2)\n    })\n  \n  output$latab=renderUI({\n    if(dim(LengthWeightAgeSpA1())[1]==0){\n      h3(paste(\"No Age data available for\", species, sep=\" \"))\n    }else if(dim(LengthWeightAgeSpA())[1]==0){\n      h3(paste(\"No Age data available for\", species, \"for\", input$slideryear1, \".Try another year\", sep= \" \"))\n    }else{\n      list(\n        plotlyOutput(\"laplot\"),\n        h2(\"Life Parameters\"),\n        fluidRow(column(6,tableOutput(\"coeff_table\"))#,\n                 #column(6,numericInput(\"age\", \"Fish Age:\", value=0, min = 0, max = 10),\n                #        HTML(\"<b>Predicted Length:</b>\"),\n                #        textOutput(\"predlength\"))\n                 ),\n        \"Data fits are modelled using Von Bertalanffy Growth Models\",HTML(\"<br>\"),\n        \"If data fits are missing this is due to either no data available or small sample sizes\",HTML(\"<br>\"),\n        \"*Filtering also available through the legend on the RHS when a parameter is chosen\")\n    }\n  })\n  \n  \n  \n  \n  \n  ##############\n  ### Cohort ###\n  ##############\n  output$coeff_table_cohort=renderTable({\n    if(input$parameter==\"None\"){ \n      coeff_cohort$Cohort=as.character(coeff_cohort$Cohort)\n      coeff_cohort_year=filter(coeff_cohort, Cohort==input$slideryear1)    \n      coeff_cohort_year\n    }else if(input$parameter==\"Gear\"){\n      coeff_gear_cohort$Cohort=as.character(coeff_gear_cohort$Cohort)\n      coeff_gear_cohort_year=filter(coeff_gear_cohort, Cohort==input$slideryear1)    \n      coeff_gear_cohort_year\n    }else if(input$parameter==\"Sex\"){\n      #coeff_sex_cohort$Cohort=as.character(coeff_sex_cohort$Cohort)\n      yeardataF=data.frame(Data= paste(input$slideryear1, \" Females\"), \n                           Linf=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnlinf\" & coeff_sex_cohort$Cohort==input$slideryear1), \"Female\"]),\n                           K=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnk\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Female\"]), \n                           t0=-exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnnt0\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Female\"]))\n      yeardataM=data.frame(Data= paste(input$slideryear1, \" Males\"), \n                           Linf=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnlinf\" & coeff_sex_cohort$Cohort==input$slideryear1), \"Male\"]),\n                           K=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnk\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Male\"]), \n                           t0=-exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnnt0\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Male\"]))\n      rbind(yeardataF, yeardataM)\n      #coeff_sex_cohort_year\n    }else if(input$parameter==\"Division\"){\n      coeff_div_cohort$Cohort=as.character(coeff_div_cohort$Cohort)\n      coeff_div_cohort_year=filter(coeff_div_cohort, Cohort==input$slideryear1)    \n      coeff_div_cohort_year\n    }\n    \n  })\n  \n  LWAcohort=reactive({\n    if(is.null(input$slideryear1)){\n      filter(LengthWeightAge, age!=\"NA\" & Cohort == 2017)\n    }else{\n      filter(LengthWeightAge, age!=\"NA\" & Cohort == input$slideryear1)}\n  })\n  \n  output$cohortplot=renderPlotly({\n    LWA_fish=LWAcohort()\n    \n    x=seq(0, max(LengthWeightAgeSpA1()$age), length.out = 199)\n    if(dim(LWA_fish)[1]==0){\n      p=NULL\n    }else if(input$parameter==\"None\"){\n      predictedcohort=data.frame(age=x, predlengthAll= vbTyp(x, Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]]),\n                                 predlengthCohort= vbTyp(x, \n                                                         Linf= coeff_cohort[which(coeff_cohort$Cohort==input$slideryear1), \"Linf\"],\n                                                         K=coeff_cohort[which(coeff_cohort$Cohort==input$slideryear1), \"K\"], \n                                                         t0=coeff_cohort[which(coeff_cohort$Cohort==input$slideryear1), \"t0\"]))\n      \n      predictedcohort=filter(predictedcohort, !is.na(predlengthCohort))\n      p=plot_ly() %>% \n        add_trace(data=LWA_fish, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",\n                  text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age),\n                  hoverinfo = 'text',\n                  marker =list(opacity = 0.5), showlegend = FALSE) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Age\"),\n               xaxis = list(title = 'Age (years)', zeroline=FALSE,\n                            range= c(min(LengthWeightAgeSpA1()$age)-.1,max(LengthWeightAgeSpA1()$age)+1)),\n               yaxis = list(title = 'Length (cm)', zeroline=FALSE,\n                            range = c(0, max(LengthWeightAgeSpA1()$length, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = TRUE)\n      if(dim(predictedcohort)[1]>0){\n      p=p %>%\n        add_trace(data=predictedcohort, x = ~age, y = ~predlengthCohort, type=\"scatter\", mode = \"lines\",\n                  line = list(shape=\"spline\", color=\"#1f77b4\"), name=paste0(input$slideryear1, \" data fit\"), hoverinfo=\"none\")\n      }\n      p$elementId <- NULL\n    }else if(input$parameter==\"Sex\"){\n      predictedcohort=data.frame(age=x, predlengthAll= vbTyp(x, Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]]),\n                                 predlengthF= vbTyp(x, Linf=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnlinf\"), \"Female\"]),\n                                                    K=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnk\"), \"Female\"]), \n                                                    t0=-exp(coeff_sex[which(coeff_sex$Parameter ==\"lnnt0\"), \"Female\"])),\n                                 predlengthM= vbTyp(x, Linf=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnlinf\"), \"Male\"]),\n                                                    K=exp(coeff_sex[which(coeff_sex$Parameter ==\"lnk\"), \"Male\"]), \n                                                    t0=-exp(coeff_sex[which(coeff_sex$Parameter ==\"lnnt0\"), \"Male\"])),\n                                 predlengthFYear= vbTyp(x, Linf=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnlinf\" & coeff_sex_cohort$Cohort==input$slideryear1), \"Female\"]),\n                                                        K=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnk\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Female\"]), \n                                                        t0=-exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnnt0\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Female\"])),\n                                 predlengthMYear= vbTyp(x, Linf=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnlinf\" & coeff_sex_cohort$Cohort==input$slideryear1), \"Male\"]),\n                                                        K=exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnk\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Male\"]), \n                                                        t0=-exp(coeff_sex_cohort[which(coeff_sex_cohort$Parameter ==\"lnnt0\"& coeff_sex_cohort$Cohort==input$slideryear1), \"Male\"])))\n\n      p=plot_ly() %>% \n        add_trace(data=LWA_fish, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",\n                  color = ~obs.sex, colors=c('unclassified'='#999999','male'='#6699ff','female'='#ff66cc'),\n                  text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age, \"<br>Sex:\", obs.sex),\n                  hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = TRUE) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Age (points coloured by sex)\"),\n               xaxis = list(title = 'Age (years)', zeroline=FALSE,\n                            range= c(min(LengthWeightAgeSpA1()$age)-.1,max(LengthWeightAgeSpA1()$age)+1)),\n               yaxis = list(title = 'Length (cm)', zeroline=FALSE,\n                            range = c(0, max(LengthWeightAgeSpA1()$length, na.rm = T)*1.05)),\n               margin=(list(t=70)), showlegend = TRUE)\n      if(all(!is.na(predictedcohort$predlengthFYear))){\n        p = p %>%\n          add_trace(data=predictedcohort, x = ~age, y = ~predlengthFYear, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color=\"#ff66cc\"), name=\"Females\", hoverinfo=\"none\")\n      }\n      if(all(!is.na(predictedcohort$predlengthMYear))){\n        p = p %>%\n          add_trace(data=predictedcohort, x = ~age, y = ~predlengthMYear, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color=\"#6699ff\"), name=\"Males\", hoverinfo=\"none\")\n      }\n      \n      \n      p$elementId <- NULL\n    }else if(input$parameter==\"Gear\"){\n      predictedcohort=data.frame(age=x, predlengthAll= vbTyp(x, Linf=coeff_all[[1]], K=coeff_all[[2]], t0=coeff_all[[3]]),\n                                 predlengthCohortA= vbTyp(x, \n                                                         Linf= coeff_gear_cohort[which(coeff_gear_cohort$Cohort==input$slideryear1 & coeff_gear_cohort$Gear==\"GOV 3647 Groundgear A\"), \"Linf\"],\n                                                         K=coeff_gear_cohort[which(coeff_gear_cohort$Cohort==input$slideryear1 & coeff_gear_cohort$Gear==\"GOV 3647 Groundgear A\"), \"K\"], \n                                                         t0=coeff_gear_cohort[which(coeff_gear_cohort$Cohort==input$slideryear1 & coeff_gear_cohort$Gear==\"GOV 3647 Groundgear A\"), \"t0\"]),\n                                 predlengthCohortD= vbTyp(x, \n                                                          Linf= coeff_gear_cohort[which(coeff_gear_cohort$Cohort==input$slideryear1 & coeff_gear_cohort$Gear==\"GOV 3647 Groundgear D\"), \"Linf\"],\n                                                          K=coeff_gear_cohort[which(coeff_gear_cohort$Cohort==input$slideryear1 & coeff_gear_cohort$Gear==\"GOV 3647 Groundgear D\"), \"K\"], \n                                                          t0=coeff_gear_cohort[which(coeff_gear_cohort$Cohort==input$slideryear1 & coeff_gear_cohort$Gear==\"GOV 3647 Groundgear D\"), \"t0\"]))\n      \n      p=plot_ly() %>% \n        add_trace(data=LWA_fish, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",\n                  color = ~fldGearDescription, colors=c(\"#132B43\", \"#56B1F7\"),\n                  text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age, \"<br>Gear type:\",fldGearDescription),\n                  hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = TRUE) %>% \n        layout(hovermode=\"closest\", title=paste(\"Length vs Age (points coloured by gear)\"),\n               yaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSpA1()$length), \n                                                            max(LengthWeightAgeSpA1()$length)+1), zeroline = FALSE),\n               xaxis = list(title = 'Age', range = c(-0.1, max(LengthWeightAgeSpA1()$age, na.rm = T)*1.05), \n                            zeroline = FALSE), margin=(list(t=70)), showlegend = TRUE) \n      if(all(!is.na(predictedcohort$predlengthCohortA))){\n        p = p %>%\n          add_trace(data=predictedcohort, x = ~age, y = ~predlengthCohortA, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color=\"#132B43\"), name=\"GOV 3647 Groundgear A\", hoverinfo=\"none\")\n      }\n      if(all(!is.na(predictedcohort$predlengthCohortD))){\n        p = p %>%\n          add_trace(data=predictedcohort, x = ~age, y = ~predlengthCohortD, type=\"scatter\", mode = \"lines\",\n                    line = list(shape=\"spline\", color=\"#56B1F7\"), name=\"GOV 3647 Groundgear D\", hoverinfo=\"none\")\n      }\n      p$elementId <- NULL\n    }else if(input$parameter==\"Division\"){\n      predictedcohort=data.frame(age=x, \n                                 predlengthVIaYear= vbTyp(x, \n                                                          Linf= coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIa\" & coeff_div_cohort$Cohort==input$slideryear1), \"Linf\"],\n                                                          K=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIa\" & coeff_div_cohort$Cohort==input$slideryear1), \"K\"],\n                                                          t0=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIa\" & coeff_div_cohort$Cohort==input$slideryear1), \"t0\"]),\n                                 predlengthVIIbYear= vbTyp(x, \n                                                           Linf= coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIb\" & coeff_div_cohort$Cohort==input$slideryear1), \"Linf\"],\n                                                           K=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIb\" & coeff_div_cohort$Cohort==input$slideryear1), \"K\"], \n                                                           t0=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIb\" & coeff_div_cohort$Cohort==input$slideryear1 ), \"t0\"]),\n                                 predlengthVIIcYear= vbTyp(x, \n                                                           Linf= coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIc\" & coeff_div_cohort$Cohort==input$slideryear1), \"Linf\"],\n                                                           K=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIc\" & coeff_div_cohort$Cohort==input$slideryear1 ), \"K\"], \n                                                           t0=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIc\" & coeff_div_cohort$Cohort==input$slideryear1 ), \"t0\"]),\n                                 predlengthVIIgYear= vbTyp(x, \n                                                           Linf= coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIg\" & coeff_div_cohort$Cohort==input$slideryear1 ), \"Linf\"],\n                                                           K=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIg\" & coeff_div_cohort$Cohort==input$slideryear1 ), \"K\"],\n                                                           t0=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIg\" & coeff_div_cohort$Cohort==input$slideryear1), \"t0\"]),\n                                 predlengthVIIjYear= vbTyp(x, \n                                                           Linf= coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIj\" & coeff_div_cohort$Cohort==input$slideryear1), \"Linf\"],\n                                                           K=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIj\" & coeff_div_cohort$Cohort==input$slideryear1), \"K\"],\n                                                           t0=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIj\" & coeff_div_cohort$Cohort==input$slideryear1), \"t0\"]),\n                                 predlengthVIIkYear= vbTyp(x, \n                                                           Linf= coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIk\" & coeff_div_cohort$Cohort==input$slideryear1 ), \"Linf\"],\n                                                           K=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIk\" & coeff_div_cohort$Cohort==input$slideryear1), \"K\"],\n                                                           t0=coeff_div_cohort[which(coeff_div_cohort$ICESCODE==\"VIIk\" & coeff_div_cohort$Cohort==input$slideryear1), \"t0\"]))\n\n      if(is.null(input$division1)){\n        ## \"Select a Division\"\n        p=NULL\n      }else{\n        grspnew.w2 = filter(LWA_fish, ICESCODE %in% c(input$division1))\n        if(dim(grspnew.w2)[1]==0){\n          p=NULL \n        }else{\n          \n          p=plot_ly() %>% \n            add_trace(data=grspnew.w2, x = ~age, y = ~length, type=\"scatter\", mode=\"markers\",color= ~ICESCODE,\n                      colors=c('VIa'='#8DD3C7','VIIb'='#FDB462','VIIc'='#BEBADA','VIIg'='#FB8072','VIIj'='#80B1D3','VIIk'='#FFFFB3'),\n                      text=~paste(\"Length:\",length,\"cm\",\"<br>Age:\",age, \"<br>Division:\",ICESCODE),\n                      hoverinfo = 'text',marker =list(opacity = 0.5), showlegend = TRUE) %>% \n            layout(hovermode=\"closest\", title=paste(\"Age vs Length (points coloured by divisions)\"),\n                   yaxis = list(title = 'Length (cm)', range= c(min(LengthWeightAgeSpA1()$length), \n                                                                max(LengthWeightAgeSpA1()$length)+1), zeroline = FALSE),\n                   xaxis = list(title = 'Age', range = c(-0.1, max(LengthWeightAgeSpA1()$age, na.rm = T)*1.05), \n                                zeroline = FALSE), margin=(list(t=70)), showlegend = TRUE)\n          \n          if(all(!is.na(predictedcohort$predlengthVIaYear)) & \"VIa\" %in% input$division1 ){\n            p=p %>% add_trace(data=predictedcohort, x = ~age, y = ~predlengthVIaYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#8DD3C7'), name=paste(input$slideryear1,\"VIa data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predictedcohort$predlengthVIIbYear))& \"VIIb\" %in% input$division1 ){\n            p=p %>% add_trace(data=predictedcohort, x = ~age, y = ~predlengthVIIbYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#FDB462'), name=paste(input$slideryear1,\"VIIb data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predictedcohort$predlengthVIIcYear))& \"VIIc\" %in% input$division1 ){\n            p=p %>% add_trace(data=predictedcohort, x = ~age, y = ~predlengthVIIcYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#BEBADA'), name=paste(input$slideryear1,\"VIIc data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predictedcohort$predlengthVIIgYear))& \"VIIg\" %in% input$division1 ){\n            p=p %>% add_trace(data=predictedcohort, x = ~age, y = ~predlengthVIIgYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#FB8072'), name=paste(input$slideryear1,\"VIIg data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predictedcohort$predlengthVIIjYear))& \"VIIj\" %in% input$division1 ){\n            p=p %>% add_trace(data=predictedcohort, x = ~age, y = ~predlengthVIIjYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#80B1D3'), name=paste(input$slideryear1,\"VIIj data fit\"), hoverinfo=\"none\")}  \n          if(all(!is.na(predictedcohort$predlengthVIIkYear))& \"VIIk\" %in% input$division1 ){\n            p=p %>% add_trace(data=predictedcohort, x = ~age, y = ~predlengthVIIkYear, type=\"scatter\", mode = \"lines\",\n                              line = list(shape=\"spline\", color='#FFFFB3'), name=paste(input$slideryear1,\"VIIk data fit\"), hoverinfo=\"none\")}  \n          \n          \n          p$elementId <- NULL\n        }\n      }\n    }\n    if(is.null(p)) plotly_empty(type = \"scatter\", mode=\"markers\") else p\n  }) \n  \n  output$cohorttab=renderUI({\n    if(dim(LengthWeightAgeSpA1())[1]==0){\n      h3(paste(\"No Age data available for\", species, sep=\" \"))\n    }else if(dim(LWAcohort())[1]==0){\n      h3(paste(\"No Age data available for\", species, \"for\", input$slideryear1, \".Try another year\", sep= \" \"))\n    }else{\n      list(\n        plotlyOutput(\"cohortplot\"),\n        h2(\"Life Parameters\"),\n        tableOutput(\"coeff_table_cohort\"),\n        \"Data fits are modelled using Von Bertalanffy Growth Models\",HTML(\"<br>\"),\n        \"If data fits are missing this is due to either no data available or small sample sizes\",HTML(\"<br>\"),\n        \"*Filtering also available through the legend on the RHS when a parameter is chosen\")\n    }\n  })\n  \n  })\n",
    "created" : 1532592871104.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3102345526",
    "id" : "D7BAAAB7",
    "lastKnownWriteTime" : 1532592912,
    "last_content_update" : -2147483648,
    "path" : "H:/IGFS/IGFS3/HER/server.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}